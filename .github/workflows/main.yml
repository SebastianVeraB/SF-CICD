name: Salesforce Skynet

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, labeled]
  push:
    branches:
      - main  # Se agrega para desencadenar despliegue en QA después de la fusión
    tags:
      - '*-uat'  
      - '*-prod' 

jobs:
  qa-check-only:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: QA
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run check-only
      run: echo "Deploy to QA using environment secrets for ${{ vars.ENV_NAME }} using ${{secrets.ENV_KEY}}"
      
  qa-deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: QA
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy
      run: echo "Deploy to QA using environment secrets for ${{ vars.ENV_NAME }} using ${{secrets.ENV_KEY}}"

    - name: Generate Tag
      id: generate_tag
      run: |
        git fetch --tags
        TAG=$(git tag -l '*-uat' --sort=-v:refname | head -n 1)
        if [[ -z "$TAG" ]]; then
          # No tags found, start with a default tag, e.g., 0.0.0
          NEW_TAG="0.0.1-uat"
        else
          TAG_BASE=$(echo $TAG | awk -F '.' '{print $1 "." $2}')
          TAG_INCREMENT=$(echo $TAG | awk -F '.' '{print $3}')
          NEXT_TAG_INCREMENT=$((TAG_INCREMENT + 1))
          NEW_TAG="$TAG_BASE.$NEXT_TAG_INCREMENT-uat"
        fi
        echo "New version: $NEW_TAG"
        echo "::set-output name=NEW_VERSION::$NEW_TAG"

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.64.0
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        CUSTOM_TAG: ${{ steps.generate_tag.outputs.NEW_VERSION }}
  

  uat-deploy:
    if: startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-uat')
    runs-on: ubuntu-latest
    environment: UAT
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to UAT
      run: echo "Deploy to UAT using environment secrets for ${{ vars.ENV_NAME }} using ${{secrets.ENV_KEY}}"

    - name: Generate Tag
      id: generate_tag
      run: |
        git fetch --tags
        TAG=$(git tag -l '*-prod' --sort=-v:refname | head -n 1)
        if [[ -z "$TAG" ]]; then
          # No tags found, start with a default tag, e.g., 0.0.0
          NEW_TAG="0.0.1-prod"
        else
          TAG_BASE=$(echo $TAG | awk -F '.' '{print $1 "." $2}')
          TAG_INCREMENT=$(echo $TAG | awk -F '.' '{print $3}')
          NEXT_TAG_INCREMENT=$((TAG_INCREMENT + 1))
          NEW_TAG="$TAG_BASE.$NEXT_TAG_INCREMENT-prod"
        fi
        echo "New version: $NEW_TAG"
        echo "::set-output name=NEW_VERSION::$NEW_TAG"

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.64.0
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        CUSTOM_TAG: ${{ steps.generate_tag.outputs.NEW_VERSION }}

 


  prod-deploy:
    if: startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-prod')
    runs-on: ubuntu-latest
    environment: PROD
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to PROD
      run: echo "Deploy to PROD using environment secrets for ${{ vars.ENV_NAME }} using ${{secrets.ENV_KEY}}"

